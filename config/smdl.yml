# General Configutaions
run_label: 'final_SGD_SVHN_ResNet20'
gpu_ids: '7'
seed: 99                        # '0' means no manual seeding

# Learning Configurations
repeat_rounds: 1

# Neural Network Architecture
model: ResNet20                 # Possible values: {LeNet5, ResNet18, ResNet20, ResNet32}

# Dataset Configurations
dataset:
    name: 'SVHN'               # Possible values: CIFAR - [10, 100], SVHN, MNIST, FashionMNIST, EMNIST
    total_num_classes: 10

# Preload model for Warm-Up
# Loads the specified model. Ignored if set to ''.
pretrained_model: ''
#pretrained_model: '/home/joseph/workspace/SMDL/output/Warm_up_model_Random_CIFAR_10_ResNet20_1125_201252/models/round_1_epoch_3.pth'

# Training Configurations
epochs: 100

batch_size: 50
batch_size_test: 100

learning_rate: 0.1
momentum: 0.9
weight_decay: 0.0001

use_custom_batch_selector: True
override_submodular_sampling: False  # If True: random sampling Else, submodular sampling

num_of_partitions: 10           # Partitions for distributed submodular selection

use_ltlg: True
ltl_log_ep: 5                   # log(1/eps) : "Lazier Than Lazy Greedy, Mirzasoleiman et al. AAAI 2015"

alpha_1: 0.2            # u_score
alpha_2: 0.1            # r_score
alpha_3: 0.5            # md_score
alpha_4: 0.2            # coverage_score

distance_metric: "euclidean"   # ['euclidean', 'cosine', 'correlation', 'seuclidean', 'canberra',
                               # 'manhatten', 'gaussian'] Please refer scipy.spatial_dist.cdist for more details

refresh_iterate: 5      # The model that is used for Submodular objective computation would be refreshed
                        # at each 'refresh_iterate' within an epoch.